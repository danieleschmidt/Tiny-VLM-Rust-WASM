[package]
name = "tiny-vlm"
version = "0.1.0"
edition = "2021"
authors = ["Tiny-VLM Team"]
license = "MIT"
description = "Ultra-efficient Vision-Language Model implementation in Rust with WebAssembly support"
repository = "https://github.com/yourusername/Tiny-VLM-Rust-WASM"
keywords = ["machine-learning", "computer-vision", "nlp", "webassembly", "mobile"]
categories = ["multimedia::images", "wasm", "science"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["std"]
std = ["chrono", "rand", "tempfile", "log", "tracing", "tracing-subscriber", "num_cpus"]
simd = []
native = ["std"]
gpu = ["std"]
wasm = ["wasm-bindgen", "wasm-bindgen-futures", "console_error_panic_hook", "js-sys", "web-sys"]

[dependencies]
# Core dependencies
bytemuck = { version = "1.14", features = ["derive"] }
half = "2.3"
num-traits = "0.2"

# WASM-specific dependencies
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", optional = true, features = [
  "console",
  "ImageData",
  "CanvasRenderingContext2d",
  "HtmlCanvasElement",
  "File",
] }

# Image processing
image = { version = "0.24", default-features = false, features = ["png", "jpeg"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"

# Logging (std feature only)
log = { version = "0.4", optional = true }
tracing = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = ["env-filter"] }

# Date/time handling (std feature only)
chrono = { version = "0.4", features = ["serde"], optional = true }

# Random number generation
rand = { version = "0.8", optional = true }

# CPU count detection (std feature only)
num_cpus = { version = "1.16", optional = true }

# Temporary file handling (dev/test only)
tempfile = { version = "3.8", optional = true }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
wasm-bindgen-test = "0.3"
tempfile = "3.8"
chrono = { version = "0.4", features = ["serde"] }
rand = "0.8"
env_logger = "0.10"

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }

[[bench]]
name = "performance_benchmarks"
harness = false

[profile.release]
lto = true
opt-level = 3
codegen-units = 1

[profile.release-small]
inherits = "release"
opt-level = "z"
strip = true
panic = "abort"

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-simd"]